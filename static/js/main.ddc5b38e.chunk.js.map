{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newitems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAoCeA,MA/Bf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACxB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OACZC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SACI,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAIjD,+BACA,cAAC,IAAD,CAAiBH,UAAU,SAASU,KAAK,QACzCC,QAAU,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAbRJ,EAAKI,QAmB3C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACClB,O,eCxBbmB,IAAQC,IAAIC,K,IAoFGC,E,kDAjFb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAGR,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZD,E,+CAelB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAIuB,KAAKC,W,qBAKf,SAAQpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACQ,KAAjBA,EAAQxB,KAAa,CACtB,IAAM2B,EAAQ,sBAAOR,KAAKL,MAAMtB,OAAlB,CAAwBgC,IACtCL,KAAKC,SAAS,CACZ5B,MAAOmC,EACPZ,YAAY,CACVf,KAAK,GACLF,IAAI,S,wBAMZ,SAAWA,GACT,IAAM8B,EAAgBT,KAAKL,MAAMtB,MAAMqC,QAAO,SAAAnC,GAAI,OAChDA,EAAKI,MAAMA,KACXqB,KAAKC,SAAS,CACZ5B,MAAOoC,M,uBAIb,SAAU5B,EAAOF,GACf,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAOA,MAGhBmB,KAAKC,SAAS,CACZ5B,MAAMA,M,oBAIV,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,iCACA,uBAAME,GAAG,aAAaiC,SAAUX,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOmC,YAAY,aAC/BhC,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cAEf,wBAAQpB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWJ,MAAO2B,KAAKL,MAAMtB,MAC7Be,WAAYY,KAAKZ,WACjBJ,UAAWgB,KAAKhB,mB,GA3EJ6B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ddc5b38e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ListItems.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props) {\r\n    const items = props.items;\r\n    const listItems = items.map(item => {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p> \r\n                <input type=\"text\" \r\n                id={item.key} \r\n                value={item.text}\r\n                onChange ={\r\n                    (e)=>{\r\n                        props.setUpdate(e.target.value, item.key)\r\n                    }\r\n                }\r\n                /> \r\n            <span>\r\n            <FontAwesomeIcon className=\"faicon\" icon='trash' \r\n            onClick={ () => props.deleteItem(item.key) } />\r\n            </span>\r\n            </p>\r\n            \r\n        </div>\r\n    })\r\n    return (\r\n        <div>\r\n            <FlipMove duration={300} easing=\"ease-in-out\">\r\n            {listItems}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItems\r\n","import React from 'react';\nimport './App.css';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if(newItem.text !== '') {\n      const newitems = [...this.state.items,newItem];\n      this.setState({\n        items: newitems,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    }\n  } \n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => \n      item.key!==key);\n      this.setState({\n        items: filteredItems\n      })\n  }\n\n  setUpdate(text,  key){\n    const items = this.state.items;\n    items.map(item => {\n      if(item.key===key){\n        item.text = text;\n      }\n    })\n    this.setState({\n      items:items\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header>\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Enter Text\"\n          value={this.state.currentItem.text}\n          onChange={this.handleInput}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n      </header>\n      <ListItems items={this.state.items} \n      deleteItem={this.deleteItem} \n      setUpdate={this.setUpdate} />\n      \n      </div>\n    )\n  }\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}